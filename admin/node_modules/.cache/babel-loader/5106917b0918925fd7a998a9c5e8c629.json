{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: null,\n    isFetching: false,\n    error: false\n  },\n  reducers: {\n    loginStart: state => {\n      state.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    loginFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["C:/Users/ricar/Desktop/Projects/shop/admin/src/redux/userRedux.js"],"names":["createSlice","userSlice","name","initialState","currentUser","isFetching","error","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,WAAW,EAAE,IADH;AAEVC,IAAAA,UAAU,EAAE,KAFF;AAGVC,IAAAA,KAAK,EAAE;AAHG,GAFY;AAO1BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,EAAGC,KAAD,IAAW;AACnBA,MAAAA,KAAK,CAACJ,UAAN,GAAmB,IAAnB;AACH,KAHK;AAINK,IAAAA,YAAY,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC7BF,MAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,MAAAA,KAAK,CAACL,WAAN,GAAoBO,MAAM,CAACC,OAA3B;AACH,KAPK;AAQNC,IAAAA,YAAY,EAAGJ,KAAD,IAAW;AACrBA,MAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACH;AAXK;AAPgB,CAAD,CAA7B;AAsBA,OAAO,MAAM;AAAEE,EAAAA,UAAF;AAAcE,EAAAA,YAAd;AAA4BG,EAAAA;AAA5B,IAA6CZ,SAAS,CAACa,OAA7D;AACP,eAAeb,SAAS,CAACc,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState: {\r\n        currentUser: null,\r\n        isFetching: false,\r\n        error: false,\r\n    },\r\n    reducers: {\r\n        loginStart: (state) => {\r\n            state.isFetching = true\r\n        },\r\n        loginSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            state.currentUser = action.payload;\r\n        },\r\n        loginFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { loginStart, loginSuccess, loginFailure } = userSlice.actions;\r\nexport default userSlice.reducer;"]},"metadata":{},"sourceType":"module"}